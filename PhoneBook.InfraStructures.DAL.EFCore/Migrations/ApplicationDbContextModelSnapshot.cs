// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneBook.InfraStructures.DAL.EFCore.Context;

namespace PhoneBook.InfraStructures.DAL.EFCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("WebSite")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Tbl_Contacts");
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.ContactGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnName("LinkContactID");

                    b.Property<int>("GroupId")
                        .HasColumnName("LinkGroupID");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("GroupId");

                    b.ToTable("Tbl_ContactGroup");
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.ContactPhoneNumbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnName("LinkContactID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<byte>("PhoneNumberTypeId")
                        .HasColumnName("LinkPhoneNumberTypeID");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("PhoneNumberTypeId");

                    b.ToTable("Tbl_ContactPhoneNumbers");
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Tbl_GroupInfo");
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.PhoneNymberType", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhoneNymberTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("Tbl_PhoneNymberType");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            PhoneNymberTypeName = "Mobile"
                        },
                        new
                        {
                            Id = (byte)2,
                            PhoneNymberTypeName = "Work"
                        },
                        new
                        {
                            Id = (byte)3,
                            PhoneNymberTypeName = "Home"
                        },
                        new
                        {
                            Id = (byte)4,
                            PhoneNymberTypeName = "Fax"
                        },
                        new
                        {
                            Id = (byte)5,
                            PhoneNymberTypeName = "Other"
                        });
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.ContactGroup", b =>
                {
                    b.HasOne("PhoneBook.Core.Entities.Entities.Contact", "Contact")
                        .WithMany("ContactGroups")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PhoneBook.Core.Entities.Entities.Group", "Group")
                        .WithMany("ContactGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PhoneBook.Core.Entities.Entities.ContactPhoneNumbers", b =>
                {
                    b.HasOne("PhoneBook.Core.Entities.Entities.Contact", "Contact")
                        .WithMany("ContactPhoneNumbers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PhoneBook.Core.Entities.Entities.PhoneNymberType", "PhoneNymberType")
                        .WithMany("ContactPhoneNumbers")
                        .HasForeignKey("PhoneNumberTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
